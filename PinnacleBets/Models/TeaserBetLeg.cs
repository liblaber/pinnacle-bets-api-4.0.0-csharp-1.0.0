// This file was generated by liblab | https://liblab.com/

using System.Text.Json.Serialization;
using PinnacleBets.Json;

namespace PinnacleBets.Models;

public record TeaserBetLeg(
    /// <value>Client generated GUID for uniquely identifying the leg.</value>
    [property:
        JsonPropertyName("legId"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? LegId = null,
    /// <value>Leg bet type can be SPREAD or TOTAL_POINTS</value>
    [property:
        JsonPropertyName("betType"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        TeaserBetLeg.TeaserBetLegBetType? BetType = null,
    /// <value>Unique identifier.</value>
    [property:
        JsonPropertyName("lineId"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        long? LineId = null,
    /// <value>Unique identifier.</value>
    [property:
        JsonPropertyName("eventId"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        long? EventId = null,
    /// <value>Team being bet on for a spread line.</value>
    [property:
        JsonPropertyName("team"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? Team = null,
    /// <value>Chosen side type. This is needed only for TOTAL_POINTS bet type.</value>
    [property:
        JsonPropertyName("side"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        TeaserBetLeg.TeaserBetLegSide? Side = null
)
{
    /// <summary>Leg bet type can be SPREAD or TOTAL_POINTS</summary>
    public record TeaserBetLegBetType : ValueEnum<string>
    {
        internal TeaserBetLegBetType(string value)
            : base(value) { }

        public TeaserBetLegBetType()
            : base("SPREAD") { }

        public static TeaserBetLegBetType Spread = new("SPREAD");
        public static TeaserBetLegBetType TotalPoints = new("TOTAL_POINTS");
    }

    /// <summary>Chosen side type. This is needed only for TOTAL_POINTS bet type.</summary>
    public record TeaserBetLegSide : ValueEnum<string>
    {
        internal TeaserBetLegSide(string value)
            : base(value) { }

        public TeaserBetLegSide()
            : base("OVER") { }

        public static TeaserBetLegSide Over = new("OVER");
        public static TeaserBetLegSide Under = new("UNDER");
    }
}
