// This file was generated by liblab | https://liblab.com/

using System.Text.Json.Serialization;
using PinnacleBets.Json;

namespace PinnacleBets.Models;

public record PlaceTeaserBetLegResponse(
    /// <value>Status of the request.</value>
    [property:
        JsonPropertyName("status"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? Status = null,
    /// <value>
    /// When Status is PROCESSED_WITH_ERROR, provides a code indicating the specific problem.
    ///
    /// CANNOT_TEASER_LIVE_GAME = Teaser is not allowed on a live game,
    /// CHECK_TEASER_ERROR = The teaser is invalid, check the teaser error for more details,
    /// INVALID_EVENT = The game is not found in the system,
    /// INVALID_LEG_BET = The wager is not verified,
    /// INVALID_LEG_BET_TYPE = Wager type is not “teasable”, can be either Spread or Total,
    /// LINE_CHANGED = Wager is placed on a line that has changed,
    /// LINE_DOES_NOT_BELONG_TO_EVENT = There was no game found for the wager,
    /// OFFLINE_EVENT = Either the game is offline OR there was no game found for the wager,
    /// PAST_CUTOFFTIME = Wager is placed on a game after the cutoff time,
    /// POINTS_ARE_NOT_ADJUSTED = The teaser points were not adjusted,
    /// SYSTEM_ERROR_1 = System error,
    /// SYSTEM_ERROR_2 = System error,
    /// WAGER_DATA_MISSING = Wager is denied due to insufficient information available for validation,
    /// LINE_IS_NOT_AVAILABLE = Line is not available for the specified Teaser Leg,
    /// TEASER_IS_NOT_ENABLED = Teaser is not available for the specified leg,
    /// BETTING_SUSPENDED - Due to anomalous market circumstances bets are not currently being accepted on this line. Try again with next LineId.
    /// </value>
    [property:
        JsonPropertyName("errorCode"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        PlaceTeaserBetLegResponse.PlaceTeaserBetLegResponseErrorCode? ErrorCode = null,
    /// <value>Echo of the legId from the request.</value>
    [property:
        JsonPropertyName("legId"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? LegId = null,
    /// <value>Line identification that bet was placed on.</value>
    [property:
        JsonPropertyName("lineId"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        long? LineId = null,
    /// <value>Number of points.</value>
    [property:
        JsonPropertyName("points"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        double? Points = null
)
{
    /// <summary>
    /// When Status is PROCESSED_WITH_ERROR, provides a code indicating the specific problem.
    ///
    /// CANNOT_TEASER_LIVE_GAME = Teaser is not allowed on a live game,
    /// CHECK_TEASER_ERROR = The teaser is invalid, check the teaser error for more details,
    /// INVALID_EVENT = The game is not found in the system,
    /// INVALID_LEG_BET = The wager is not verified,
    /// INVALID_LEG_BET_TYPE = Wager type is not “teasable”, can be either Spread or Total,
    /// LINE_CHANGED = Wager is placed on a line that has changed,
    /// LINE_DOES_NOT_BELONG_TO_EVENT = There was no game found for the wager,
    /// OFFLINE_EVENT = Either the game is offline OR there was no game found for the wager,
    /// PAST_CUTOFFTIME = Wager is placed on a game after the cutoff time,
    /// POINTS_ARE_NOT_ADJUSTED = The teaser points were not adjusted,
    /// SYSTEM_ERROR_1 = System error,
    /// SYSTEM_ERROR_2 = System error,
    /// WAGER_DATA_MISSING = Wager is denied due to insufficient information available for validation,
    /// LINE_IS_NOT_AVAILABLE = Line is not available for the specified Teaser Leg,
    /// TEASER_IS_NOT_ENABLED = Teaser is not available for the specified leg,
    /// BETTING_SUSPENDED - Due to anomalous market circumstances bets are not currently being accepted on this line. Try again with next LineId.
    /// </summary>
    public record PlaceTeaserBetLegResponseErrorCode : ValueEnum<string>
    {
        internal PlaceTeaserBetLegResponseErrorCode(string value)
            : base(value) { }

        public PlaceTeaserBetLegResponseErrorCode()
            : base("CANNOT_TEASER_LIVE_GAME") { }

        public static PlaceTeaserBetLegResponseErrorCode CannotTeaserLiveGame =
            new("CANNOT_TEASER_LIVE_GAME");
        public static PlaceTeaserBetLegResponseErrorCode CheckTeaserError =
            new("CHECK_TEASER_ERROR");
        public static PlaceTeaserBetLegResponseErrorCode InvalidEvent = new("INVALID_EVENT");
        public static PlaceTeaserBetLegResponseErrorCode InvalidLegBet = new("INVALID_LEG_BET");
        public static PlaceTeaserBetLegResponseErrorCode InvalidLegBetType =
            new("INVALID_LEG_BET_TYPE");
        public static PlaceTeaserBetLegResponseErrorCode LineChanged = new("LINE_CHANGED");
        public static PlaceTeaserBetLegResponseErrorCode LineDoesNotBelongToEvent =
            new("LINE_DOES_NOT_BELONG_TO_EVENT");
        public static PlaceTeaserBetLegResponseErrorCode OfflineEvent = new("OFFLINE_EVENT");
        public static PlaceTeaserBetLegResponseErrorCode PastCutofftime = new("PAST_CUTOFFTIME");
        public static PlaceTeaserBetLegResponseErrorCode PointsAreNotAdjusted =
            new("POINTS_ARE_NOT_ADJUSTED");
        public static PlaceTeaserBetLegResponseErrorCode SystemError1 = new("SYSTEM_ERROR_1");
        public static PlaceTeaserBetLegResponseErrorCode SystemError2 = new("SYSTEM_ERROR_2");
        public static PlaceTeaserBetLegResponseErrorCode WagerDataMissing =
            new("WAGER_DATA_MISSING");
        public static PlaceTeaserBetLegResponseErrorCode LineIsNotAvailable =
            new("LINE_IS_NOT_AVAILABLE");
        public static PlaceTeaserBetLegResponseErrorCode TeaserIsNotEnabled =
            new("TEASER_IS_NOT_ENABLED");
        public static PlaceTeaserBetLegResponseErrorCode BettingSuspended =
            new("BETTING_SUSPENDED");
    }
}
