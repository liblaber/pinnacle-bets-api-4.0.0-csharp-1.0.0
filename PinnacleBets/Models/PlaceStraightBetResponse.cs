// This file was generated by liblab | https://liblab.com/

using System.Text.Json.Serialization;
using PinnacleBets.Json;

namespace PinnacleBets.Models;

public record PlaceStraightBetResponse(
    /// <value>Status of the response.</value>
    [property:
        JsonPropertyName("status"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        PlaceStraightBetResponse.PlaceStraightBetResponseStatus? Status = null,
    /// <value>
    /// If Status is PROCESSED_WITH_ERROR, errorCode will be in the response.
    ///
    /// ALL_BETTING_CLOSED = Betting is not allowed at this moment. This may happen during system maintenance,
    /// ALL_LIVE_BETTING_CLOSED = Live betting is not allowed at this moment. This may happen during system maintenance,
    /// ABOVE_EVENT_MAX = Bet cannot be placed because client exceeded allowed maximum of risk on a line,
    /// ABOVE_MAX_BET_AMOUNT = Stake is above allowed maximum amount,
    /// BELOW_MIN_BET_AMOUNT = Stake is below allowed minimum amount,
    /// BLOCKED_BETTING = Betting is suspended for the client,
    /// BLOCKED_CLIENT = Client is no longer active,
    /// INSUFFICIENT_FUNDS = Bet is submitted by a client with insufficient funds,
    /// INVALID_COUNTRY = Client country is not allowed for betting,
    /// INVALID_EVENT = Invalid eventid,
    /// INVALID_ODDS_FORMAT = If a bet was submitted with the odds format that is not allowed for the client,
    /// LINE_CHANGED = Bet is submitted on a line that has changed,
    /// OFFLINE_EVENT = Bet is submitted on an event that is offline or the submitted line is not offered at the moment due to points/handicap change or the submitted bet type is just not offered at the moment,
    /// PAST_CUTOFFTIME = Bet is submitted on a game after the betting cutoff time,
    /// RED_CARDS_CHANGED = Bet is submitted on a live soccer event with changed red card count,
    /// SCORE_CHANGED = Bet is submitted on a live soccer event with changed score,
    /// TIME_RESTRICTION = Bet is submitted within too short of a period from the same bet previously placed by a client,
    /// DUPLICATED_REQUEST = Request with the same uniqueRequestId was already processed. Please set the new value if you still want the request to be processed,
    /// INCOMPLETE_CUSTOMER_BETTING_PROFILE = System configuration issue,
    /// INVALID_CUSTOMER_PROFILE = System configuration issue,
    /// LIMITS_CONFIGURATION_ISSUE = System configuration issue,
    /// RESPONSIBLE_BETTING_LOSS_LIMIT_EXCEEDED = Client has reached his total loss limit,
    /// RESPONSIBLE_BETTING_RISK_LIMIT_EXCEEDED = Client has reached his total risk limit,
    /// SYSTEM_ERROR_3 = Unexpected error,
    /// LICENCE_RESTRICTION_LIVE_BETTING_BLOCKED - Live betting blocked due to licence restrictions,
    /// BETTING_SUSPENDED - Due to anomalous market circumstances bets are not currently being accepted on this line. Try again with next LineId.
    /// </value>
    [property: JsonPropertyName("errorCode")]
        PlaceStraightBetResponse.PlaceStraightBetResponseErrorCode? ErrorCode = null,
    /// <value>Echo of the uniqueRequestId from the request.</value>
    [property:
        JsonPropertyName("uniqueRequestId"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? UniqueRequestId = null,
    /// <value>Bet identification. Populated in case of accepted bet.</value>
    [property:
        JsonPropertyName("betId"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        long? BetId = null,
    /// <value>Win amount. Populated in case of accepted bet.</value>
    [property:
        JsonPropertyName("win"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        double? Win = null,
    /// <value>Risk amount.  Populated in case of accepted bet.</value>
    [property:
        JsonPropertyName("risk"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        double? Risk = null,
    /// <value>Bet price. Populated in case of accepted bet.</value>
    [property:
        JsonPropertyName("price"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        double? Price = null,
    /// <value>Whether or not the bet was accepted on the line that changed in favour of client. This can be true only if `acceptBetterLine` in the Place Bet request is set to TRUE.</value>
    [property:
        JsonPropertyName("betterLineWasAccepted"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        bool? BetterLineWasAccepted = null
)
{
    /// <summary>Status of the response.</summary>
    public record PlaceStraightBetResponseStatus : ValueEnum<string>
    {
        internal PlaceStraightBetResponseStatus(string value)
            : base(value) { }

        public PlaceStraightBetResponseStatus()
            : base("ACCEPTED") { }

        public static PlaceStraightBetResponseStatus Accepted = new("ACCEPTED");
        public static PlaceStraightBetResponseStatus PendingAcceptance = new("PENDING_ACCEPTANCE");
        public static PlaceStraightBetResponseStatus ProcessedWithError =
            new("PROCESSED_WITH_ERROR");
    }

    /// <summary>
    /// If Status is PROCESSED_WITH_ERROR, errorCode will be in the response.
    ///
    /// ALL_BETTING_CLOSED = Betting is not allowed at this moment. This may happen during system maintenance,
    /// ALL_LIVE_BETTING_CLOSED = Live betting is not allowed at this moment. This may happen during system maintenance,
    /// ABOVE_EVENT_MAX = Bet cannot be placed because client exceeded allowed maximum of risk on a line,
    /// ABOVE_MAX_BET_AMOUNT = Stake is above allowed maximum amount,
    /// BELOW_MIN_BET_AMOUNT = Stake is below allowed minimum amount,
    /// BLOCKED_BETTING = Betting is suspended for the client,
    /// BLOCKED_CLIENT = Client is no longer active,
    /// INSUFFICIENT_FUNDS = Bet is submitted by a client with insufficient funds,
    /// INVALID_COUNTRY = Client country is not allowed for betting,
    /// INVALID_EVENT = Invalid eventid,
    /// INVALID_ODDS_FORMAT = If a bet was submitted with the odds format that is not allowed for the client,
    /// LINE_CHANGED = Bet is submitted on a line that has changed,
    /// OFFLINE_EVENT = Bet is submitted on an event that is offline or the submitted line is not offered at the moment due to points/handicap change or the submitted bet type is just not offered at the moment,
    /// PAST_CUTOFFTIME = Bet is submitted on a game after the betting cutoff time,
    /// RED_CARDS_CHANGED = Bet is submitted on a live soccer event with changed red card count,
    /// SCORE_CHANGED = Bet is submitted on a live soccer event with changed score,
    /// TIME_RESTRICTION = Bet is submitted within too short of a period from the same bet previously placed by a client,
    /// DUPLICATED_REQUEST = Request with the same uniqueRequestId was already processed. Please set the new value if you still want the request to be processed,
    /// INCOMPLETE_CUSTOMER_BETTING_PROFILE = System configuration issue,
    /// INVALID_CUSTOMER_PROFILE = System configuration issue,
    /// LIMITS_CONFIGURATION_ISSUE = System configuration issue,
    /// RESPONSIBLE_BETTING_LOSS_LIMIT_EXCEEDED = Client has reached his total loss limit,
    /// RESPONSIBLE_BETTING_RISK_LIMIT_EXCEEDED = Client has reached his total risk limit,
    /// SYSTEM_ERROR_3 = Unexpected error,
    /// LICENCE_RESTRICTION_LIVE_BETTING_BLOCKED - Live betting blocked due to licence restrictions,
    /// BETTING_SUSPENDED - Due to anomalous market circumstances bets are not currently being accepted on this line. Try again with next LineId.
    /// </summary>
    public record PlaceStraightBetResponseErrorCode : ValueEnum<string>
    {
        internal PlaceStraightBetResponseErrorCode(string value)
            : base(value) { }

        public PlaceStraightBetResponseErrorCode()
            : base("ALL_BETTING_CLOSED") { }

        public static PlaceStraightBetResponseErrorCode AllBettingClosed =
            new("ALL_BETTING_CLOSED");
        public static PlaceStraightBetResponseErrorCode AllLiveBettingClosed =
            new("ALL_LIVE_BETTING_CLOSED");
        public static PlaceStraightBetResponseErrorCode AboveEventMax = new("ABOVE_EVENT_MAX");
        public static PlaceStraightBetResponseErrorCode AboveMaxBetAmount =
            new("ABOVE_MAX_BET_AMOUNT");
        public static PlaceStraightBetResponseErrorCode BelowMinBetAmount =
            new("BELOW_MIN_BET_AMOUNT");
        public static PlaceStraightBetResponseErrorCode BlockedBetting = new("BLOCKED_BETTING");
        public static PlaceStraightBetResponseErrorCode BlockedClient = new("BLOCKED_CLIENT");
        public static PlaceStraightBetResponseErrorCode InsufficientFunds =
            new("INSUFFICIENT_FUNDS");
        public static PlaceStraightBetResponseErrorCode InvalidCountry = new("INVALID_COUNTRY");
        public static PlaceStraightBetResponseErrorCode InvalidEvent = new("INVALID_EVENT");
        public static PlaceStraightBetResponseErrorCode InvalidOddsFormat =
            new("INVALID_ODDS_FORMAT");
        public static PlaceStraightBetResponseErrorCode LineChanged = new("LINE_CHANGED");
        public static PlaceStraightBetResponseErrorCode ListedPitchersSelectionError =
            new("LISTED_PITCHERS_SELECTION_ERROR");
        public static PlaceStraightBetResponseErrorCode OfflineEvent = new("OFFLINE_EVENT");
        public static PlaceStraightBetResponseErrorCode PastCutofftime = new("PAST_CUTOFFTIME");
        public static PlaceStraightBetResponseErrorCode RedCardsChanged = new("RED_CARDS_CHANGED");
        public static PlaceStraightBetResponseErrorCode ScoreChanged = new("SCORE_CHANGED");
        public static PlaceStraightBetResponseErrorCode TimeRestriction = new("TIME_RESTRICTION");
        public static PlaceStraightBetResponseErrorCode DuplicatedRequest =
            new("DUPLICATED_REQUEST");
        public static PlaceStraightBetResponseErrorCode IncompleteCustomerBettingProfile =
            new("INCOMPLETE_CUSTOMER_BETTING_PROFILE");
        public static PlaceStraightBetResponseErrorCode InvalidCustomerProfile =
            new("INVALID_CUSTOMER_PROFILE");
        public static PlaceStraightBetResponseErrorCode LimitsConfigurationIssue =
            new("LIMITS_CONFIGURATION_ISSUE");
        public static PlaceStraightBetResponseErrorCode ResponsibleBettingLossLimitExceeded =
            new("RESPONSIBLE_BETTING_LOSS_LIMIT_EXCEEDED");
        public static PlaceStraightBetResponseErrorCode ResponsibleBettingRiskLimitExceeded =
            new("RESPONSIBLE_BETTING_RISK_LIMIT_EXCEEDED");
        public static PlaceStraightBetResponseErrorCode SystemError3 = new("SYSTEM_ERROR_3");
        public static PlaceStraightBetResponseErrorCode LicenceRestrictionLiveBettingBlocked =
            new("LICENCE_RESTRICTION_LIVE_BETTING_BLOCKED");
        public static PlaceStraightBetResponseErrorCode BettingSuspended = new("BETTING_SUSPENDED");
    }
}
