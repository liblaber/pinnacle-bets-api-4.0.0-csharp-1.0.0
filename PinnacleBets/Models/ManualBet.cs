// This file was generated by liblab | https://liblab.com/

using System.Text.Json.Serialization;
using PinnacleBets.Json;

namespace PinnacleBets.Models;

public record ManualBet(
    /// <value>Bet identification</value>
    [property: JsonPropertyName("betId")]
        long BetId,
    /// <value>Wager identification. All bets placed thru the API will have value 1. Website Classic view supports multiple contest(special) bets placement in the same bet slip in that case the bet would have appropriate wager number, as well as all round robin parlay bets.</value>
    [property: JsonPropertyName("wagerNumber")]
        long WagerNumber,
    /// <value>Date time when the bet was placed.</value>
    [property: JsonPropertyName("placedAt")]
        string PlacedAt,
    /// <value>
    /// Bet Status.
    ///
    /// ACCEPTED = Bet was accepted,
    /// CANCELLED = Bet is cancelled as per Pinnacle betting rules,
    /// LOSE = The bet is settled as lose,
    /// REFUNDED = When an event is cancelled or when the bet is settled as push, the bet will have REFUNDED status,
    /// WON = The bet is settled as won
    /// </value>
    [property: JsonPropertyName("betStatus")]
        ManualBet.ManualBetBetStatus BetStatus,
    [property: JsonPropertyName("betType")] string BetType,
    /// <value>Win amount.</value>
    [property: JsonPropertyName("win")]
        double Win,
    /// <value>Risk amount.</value>
    [property: JsonPropertyName("risk")]
        double Risk,
    /// <value>Update Sequence</value>
    [property: JsonPropertyName("updateSequence")]
        long UpdateSequence,
    /// <value>Manual bet description.</value>
    [property: JsonPropertyName("description")]
        string Description,
    /// <value>Win-Loss for settled bets.</value>
    [property:
        JsonPropertyName("winLoss"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        double? WinLoss = null,
    /// <value>Referenced original bet id.</value>
    [property: JsonPropertyName("referenceBetId")]
        long? ReferenceBetId = null
)
{
    /// <summary>
    /// Bet Status.
    ///
    /// ACCEPTED = Bet was accepted,
    /// CANCELLED = Bet is cancelled as per Pinnacle betting rules,
    /// LOSE = The bet is settled as lose,
    /// REFUNDED = When an event is cancelled or when the bet is settled as push, the bet will have REFUNDED status,
    /// WON = The bet is settled as won
    /// </summary>
    public record ManualBetBetStatus : ValueEnum<string>
    {
        internal ManualBetBetStatus(string value)
            : base(value) { }

        public ManualBetBetStatus()
            : base("ACCEPTED") { }

        public static ManualBetBetStatus Accepted = new("ACCEPTED");
        public static ManualBetBetStatus Cancelled = new("CANCELLED");
        public static ManualBetBetStatus Lose = new("LOSE");
        public static ManualBetBetStatus Refunded = new("REFUNDED");
        public static ManualBetBetStatus Won = new("WON");
    }
}
