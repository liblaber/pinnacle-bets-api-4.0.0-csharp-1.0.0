// This file was generated by liblab | https://liblab.com/

using System.Text.Json.Serialization;
using PinnacleBets.Json;

namespace PinnacleBets.Models;

public record PlaceTeaserBetResponse(
    /// <value>Status of the request.</value>
    [property:
        JsonPropertyName("status"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? Status = null,
    /// <value>
    /// When Status is PROCESSED_WITH_ERROR, provides a code indicating the specific problem.
    ///
    /// ABOVE_MAX_BET_AMOUNT = Bet is above the maximum allowed,
    /// ALL_BETTING_CLOSED = The wagering is disabled in the system (not related to a customer),
    /// BELOW_MIN_BET_AMOUNT = Bet is below the minimum allowed,
    /// BLOCKED_BETTING = Betting is suspended for the client,
    /// BLOCKED_CLIENT = Customer is inactive in the system,
    /// DOUBLE_HIT = The website submitted the same bet more than once,
    /// DUPLICATE_CLIENT_REFERENCE_ID = The teaser unique id and/or one of the leg unique id are the same,
    /// INCOMPLETE_CUSTOMER_BETTING_PROFILE = The customer does not exist,
    /// INSUFFICIENT_FUNDS = The risk amount is above the customer’s available balance,
    /// INVALID_COUNTRY = Current location is proscribed,
    /// INVALID_CUSTOMER_PROFILE = Either the customer does not exist OR the customer business rules are not verified,
    /// INVALID_LEGS = One or more legs are not verified,
    /// INVALID_REQUEST = Teaser request is not valid,
    /// ODDS_FORMAT_MISMATCH = Agent customer’s odds format differs from wager request odds format,
    /// TEASER_DOES_NOT_EXIST = Teaser does not exist in the system,
    /// SAME_EVENT_ONLY_REQUIRED = Legs required to be for the same game only. Specified in the Teaser Specifications,
    /// SYSTEM_ERROR_1 = System error,
    /// SYSTEM_ERROR_2 = System error,
    /// SYSTEM_ERROR_3 = System error,
    /// TOO_FEW_LEGS = Legs count is below Min Picks specified in the Teaser Specifications,
    /// TOO_MANY_LEGS = Legs count is above Max Picks specified in the Teaser Specifications,
    /// DUPLICATED_REQUEST = Request with the same uniqueRequestId was already processed. Please set the new value if you still want the request to be processed,
    /// RESPONSIBLE_BETTING_LOSS_LIMIT_EXCEEDED = Client has reached his total loss limit,
    /// RESPONSIBLE_BETTING_RISK_LIMIT_EXCEEDED = Client has reached his total risk limit
    /// </value>
    [property:
        JsonPropertyName("errorCode"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        PlaceTeaserBetResponse.PlaceTeaserBetResponseErrorCode? ErrorCode = null,
    /// <value>Id of a newly created bet.</value>
    [property:
        JsonPropertyName("betId"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        long? BetId = null,
    /// <value>Unique identifier provided in the request.</value>
    [property:
        JsonPropertyName("uniqueRequestId"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? UniqueRequestId = null,
    /// <value>Price for the bet.</value>
    [property:
        JsonPropertyName("price"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        double? Price = null,
    /// <value>Amount wagered.</value>
    [property:
        JsonPropertyName("risk"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        double? Risk = null,
    /// <value>Potential winnings.</value>
    [property:
        JsonPropertyName("win"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        double? Win = null,
    /// <value>A collection of invalid legs, if any.</value>
    [property:
        JsonPropertyName("invalidLegs"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        List<PlaceTeaserBetLegResponse>? InvalidLegs = null,
    /// <value>A collection of valid legs, if any.</value>
    [property:
        JsonPropertyName("validLegs"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        List<PlaceTeaserBetLegResponse>? ValidLegs = null
)
{
    /// <summary>
    /// When Status is PROCESSED_WITH_ERROR, provides a code indicating the specific problem.
    ///
    /// ABOVE_MAX_BET_AMOUNT = Bet is above the maximum allowed,
    /// ALL_BETTING_CLOSED = The wagering is disabled in the system (not related to a customer),
    /// BELOW_MIN_BET_AMOUNT = Bet is below the minimum allowed,
    /// BLOCKED_BETTING = Betting is suspended for the client,
    /// BLOCKED_CLIENT = Customer is inactive in the system,
    /// DOUBLE_HIT = The website submitted the same bet more than once,
    /// DUPLICATE_CLIENT_REFERENCE_ID = The teaser unique id and/or one of the leg unique id are the same,
    /// INCOMPLETE_CUSTOMER_BETTING_PROFILE = The customer does not exist,
    /// INSUFFICIENT_FUNDS = The risk amount is above the customer’s available balance,
    /// INVALID_COUNTRY = Current location is proscribed,
    /// INVALID_CUSTOMER_PROFILE = Either the customer does not exist OR the customer business rules are not verified,
    /// INVALID_LEGS = One or more legs are not verified,
    /// INVALID_REQUEST = Teaser request is not valid,
    /// ODDS_FORMAT_MISMATCH = Agent customer’s odds format differs from wager request odds format,
    /// TEASER_DOES_NOT_EXIST = Teaser does not exist in the system,
    /// SAME_EVENT_ONLY_REQUIRED = Legs required to be for the same game only. Specified in the Teaser Specifications,
    /// SYSTEM_ERROR_1 = System error,
    /// SYSTEM_ERROR_2 = System error,
    /// SYSTEM_ERROR_3 = System error,
    /// TOO_FEW_LEGS = Legs count is below Min Picks specified in the Teaser Specifications,
    /// TOO_MANY_LEGS = Legs count is above Max Picks specified in the Teaser Specifications,
    /// DUPLICATED_REQUEST = Request with the same uniqueRequestId was already processed. Please set the new value if you still want the request to be processed,
    /// RESPONSIBLE_BETTING_LOSS_LIMIT_EXCEEDED = Client has reached his total loss limit,
    /// RESPONSIBLE_BETTING_RISK_LIMIT_EXCEEDED = Client has reached his total risk limit
    /// </summary>
    public record PlaceTeaserBetResponseErrorCode : ValueEnum<string>
    {
        internal PlaceTeaserBetResponseErrorCode(string value)
            : base(value) { }

        public PlaceTeaserBetResponseErrorCode()
            : base("ABOVE_MAX_BET_AMOUNT") { }

        public static PlaceTeaserBetResponseErrorCode AboveMaxBetAmount =
            new("ABOVE_MAX_BET_AMOUNT");
        public static PlaceTeaserBetResponseErrorCode AllBettingClosed = new("ALL_BETTING_CLOSED");
        public static PlaceTeaserBetResponseErrorCode BelowMinBetAmount =
            new("BELOW_MIN_BET_AMOUNT");
        public static PlaceTeaserBetResponseErrorCode BlockedBetting = new("BLOCKED_BETTING");
        public static PlaceTeaserBetResponseErrorCode BlockedClient = new("BLOCKED_CLIENT");
        public static PlaceTeaserBetResponseErrorCode DoubleHit = new("DOUBLE_HIT");
        public static PlaceTeaserBetResponseErrorCode DuplicateClientReferenceId =
            new("DUPLICATE_CLIENT_REFERENCE_ID");
        public static PlaceTeaserBetResponseErrorCode IncompleteCustomerBettingProfile =
            new("INCOMPLETE_CUSTOMER_BETTING_PROFILE");
        public static PlaceTeaserBetResponseErrorCode InsufficientFunds = new("INSUFFICIENT_FUNDS");
        public static PlaceTeaserBetResponseErrorCode InvalidCountry = new("INVALID_COUNTRY");
        public static PlaceTeaserBetResponseErrorCode InvalidCustomerProfile =
            new("INVALID_CUSTOMER_PROFILE");
        public static PlaceTeaserBetResponseErrorCode InvalidLegs = new("INVALID_LEGS");
        public static PlaceTeaserBetResponseErrorCode InvalidRequest = new("INVALID_REQUEST");
        public static PlaceTeaserBetResponseErrorCode OddsFormatMismatch =
            new("ODDS_FORMAT_MISMATCH");
        public static PlaceTeaserBetResponseErrorCode TeaserDoesNotExist =
            new("TEASER_DOES_NOT_EXIST");
        public static PlaceTeaserBetResponseErrorCode SameEventOnlyRequired =
            new("SAME_EVENT_ONLY_REQUIRED");
        public static PlaceTeaserBetResponseErrorCode SystemError1 = new("SYSTEM_ERROR_1");
        public static PlaceTeaserBetResponseErrorCode SystemError2 = new("SYSTEM_ERROR_2");
        public static PlaceTeaserBetResponseErrorCode SystemError3 = new("SYSTEM_ERROR_3");
        public static PlaceTeaserBetResponseErrorCode TooFewLegs = new("TOO_FEW_LEGS");
        public static PlaceTeaserBetResponseErrorCode TooManyLegs = new("TOO_MANY_LEGS");
        public static PlaceTeaserBetResponseErrorCode DuplicatedRequest = new("DUPLICATED_REQUEST");
        public static PlaceTeaserBetResponseErrorCode ResponsibleBettingLossLimitExceeded =
            new("RESPONSIBLE_BETTING_LOSS_LIMIT_EXCEEDED");
        public static PlaceTeaserBetResponseErrorCode ResponsibleBettingRiskLimitExceeded =
            new("RESPONSIBLE_BETTING_RISK_LIMIT_EXCEEDED");
    }
}
